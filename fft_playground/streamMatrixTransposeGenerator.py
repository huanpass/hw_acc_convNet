"""
This file is to generate p*p crossbar given k and M
M is the matrix size, k is p/M, # of lines processed in one cycle
"""

def getInputIndex(outputIndex, k, M):
    assert M % k == 0, "k must be a divisor of M."
    groupIndex = outputIndex // M    # from [0, k)
    groupOffset = outputIndex % M     # from [0, M)
    subGroupIndex = groupOffset // k  # from [0, M/k)
    subGroupOffset = groupOffset % k  # from [0, k)
    j = groupIndex + 1 + subGroupIndex * k
    i = subGroupOffset + 1
    return (i - 1) * M + j - 1, i, j


def testGetInputIndex():
    k, M = 4, 8
    for _ in range(k*M):
        inputIndex, i, j = getInputIndex(_, k, M)
        coordinate = (i, j)
        print inputIndex, "->", coordinate, "->", _


def generateVerilogLine(numSpace, text):
    return " " * numSpace + text + "\n"

def generateCrossBarVerilog(k, M, fileName):
    f = open(fileName, "w")
    # generate the top comment
    f.write(generateVerilogLine(0, "\*"))
    f.write(generateVerilogLine(1, "* This file is automatically generated"))
    f.write(generateVerilogLine(1, "*/"))
    